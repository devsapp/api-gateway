"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseApiConfig = exports.parseInput = void 0;
var tools_1 = require("./tools/tools");
function getAccess(inputs) {
    var _a = inputs.credentials, AccessKeyID = _a.AccessKeyID, AccessKeySecret = _a.AccessKeySecret;
    return [AccessKeyID, AccessKeySecret];
}
/**
 * @description 解析yaml并且将必要的阿里云id和key拼装进来
 */
function parseInput(inputs) {
    var theInputs = (0, tools_1.deepClone)(inputs);
    var argsObj = theInputs.argsObj;
    var _a = getAccess(theInputs), AccessKeyID = _a[0], AccessKeySecret = _a[1];
    var props = (0, tools_1.handleAutoFormat)(theInputs.props);
    return {
        AccessKeyID: AccessKeyID,
        AccessKeySecret: AccessKeySecret,
        props: props,
        argsObj: argsObj
    };
}
exports.parseInput = parseInput;
/**
 * @param c1 全部配置（远程返回）
 * @param c2 部分配置（本地配置）
 * @description 比对本地配置和远程配置，并返回合适结构的需更新api配置
 */
function parseApiConfig(c1, c2) {
    // 除了http方式之外的网关，参数暂时不明，这里直接采取全局更新
    if (myParse(c2.serviceConfig).serviceProtocol && (myParse(c2.serviceConfig).serviceProtocol !== 'HTTP' || !myParse(c2.serviceConfig).serviceProtocol))
        return {
            needModify: 1 //需要api全局更新
        };
    var c = {};
    function need(obj1, obj2) {
        return obj1 !== obj2 && obj2;
    }
    function myStringify(obj) {
        if (typeof obj === 'string')
            return obj;
        return JSON.stringify(obj);
    }
    function myParse(str) {
        if (typeof str === 'string')
            return JSON.parse(str);
        return str;
    }
    need(c1.allowSignatureMethod, c2.allowSignatureMethod) && (c.allowSignatureMethod = c2.allowSignatureMethod);
    need(c1.appCodeAuthType, c2.appCodeAuthType) && (c.appCodeAuthType = c2.appCodeAuthType);
    need(c1.authType, c2.authType) && (c.authType = c2.authType);
    need(myStringify(c1.requestParameters.requestParameter), myStringify(c2.requestParameters))
        && (c.requestParameters = myStringify(c2.constantParameters));
    need(myStringify(c1.serviceParameters.serviceParameter), myStringify(c2.serviceParameters))
        && (c.serviceParameters = myStringify(c2.serviceParameters));
    need(myStringify(c1.serviceParametersMap.serviceParameterMap), myStringify(c2.serviceParametersMap))
        && (c.serviceParametersMap = myStringify(c2.serviceParametersMap));
    need(myStringify(c1.errorCodeSamples.errorCodeSample), myStringify(c2.errorCodeSamples))
        && (c.errorCodeSamples = myStringify(c2.errorCodeSamples));
    need(c1.visibility, c2.visibility) && (c.visibility = c2.visibility);
    need(c1.ResultSample, c2.ResultSample) && (c.ResultSample = c2.ResultSample);
    need(c1.disableInternet, c2.disableInternet) && (c.disableInternet = c2.disableInternet);
    need(c1.failResultSample, c2.failResultSample) && (c.failResultSample = c2.failResultSample);
    need(c1.forceNonceCheck, c2.forceNonceCheck) && (c.forceNonceCheck = c2.forceNonceCheck);
    need(c1.requestConfig.bodyFormat, myParse(c2.requestConfig).bodyFormat) && (c.bodyFormat = myParse(c2.requestConfig).bodyFormat);
    need(c1.requestConfig.postBodyDescription, myParse(c2.requestConfig).postBodyDescription) && (c.postBodyDescription = myParse(c2.requestConfig).postBodyDescription);
    need(c1.requestConfig.requestHttpMethod, myParse(c2.requestConfig).requestHttpMethod) && (c.requestHttpMethod = myParse(c2.requestConfig).requestHttpMethod);
    need(c1.requestConfig.requestPath, myParse(c2.requestConfig).requestPath) && (c.requestPath = myParse(c2.requestConfig).requestPath);
    need(c1.requestConfig.requestMode, myParse(c2.requestConfig).requestMode) && (c.requestMode = myParse(c2.requestConfig).requestMode);
    need(c1.requestConfig.requestProtocol, myParse(c2.requestConfig).requestProtocol) && (c.requestProtocol = myParse(c2.requestConfig).requestProtocol);
    need(c1.serviceConfig.serviceProtocol, myParse(c2.serviceConfig).serviceProtocol) && (c.serviceProtocol = myParse(c2.serviceConfig).serviceProtocol);
    need(c1.serviceConfig.serviceTimeout, myParse(c2.serviceConfig).serviceTimeout) && (c.serviceTimeout = myParse(c2.serviceConfig).serviceTimeout);
    need(c1.serviceConfig.contentTypeValue, myParse(c2.serviceConfig).contentTypeValue) && (c.contentTypeValue = myParse(c2.serviceConfig).contentTypeValue);
    //特殊判断：
    if (c1.serviceConfig.serviceHttpMethod, myParse(c2.serviceConfig).serviceHttpMethod) {
        c.httpConfig = {};
        c.httpConfig.serviceHttpMethod = myParse(c2.serviceConfig).serviceHttpMethod;
    }
    if ("".concat(c1.serviceConfig.serviceAddress).concat(c1.serviceConfig.servicePath) !== "".concat(myParse(c2.serviceConfig).serviceAddress).concat(myParse(c2.serviceConfig).servicePath)) {
        if (!c.httpConfig)
            c.httpConfig = {};
        c.httpConfig.serviceAddress = myParse(c2.serviceConfig).serviceAddress;
        c.httpConfig.servicePath = myParse(c2.serviceConfig).servicePath;
    }
    c.httpConfig && (c.httpConfig = JSON.stringify(c.httpConfig));
    if (Object.keys(c).length === 0)
        return { needModify: 0 };
    return (0, tools_1.merge)({}, {
        apiId: c1.apiId,
        apiName: c1.apiName,
        visibility: "PRIVATE",
        resultType: "JSON",
        serviceProtocol: "HTTP",
        resultSample: ""
    }, c);
}
exports.parseApiConfig = parseApiConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbGliL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVFBLHVDQUFrRTtBQUlsRSxTQUFTLFNBQVMsQ0FBQyxNQUFrQjtJQUVqQyxJQUFBLEtBQ0UsTUFBTSxZQURxQyxFQUE5QixXQUFXLGlCQUFBLEVBQUUsZUFBZSxxQkFBRSxDQUNyQztJQUNWLE9BQU8sQ0FBQyxXQUFXLEVBQUUsZUFBZSxDQUFDLENBQUE7QUFDdkMsQ0FBQztBQUVEOztHQUVHO0FBQ0gsU0FBZ0IsVUFBVSxDQUFDLE1BQWtCO0lBQzNDLElBQU0sU0FBUyxHQUFHLElBQUEsaUJBQVMsRUFBQyxNQUFNLENBQUMsQ0FBQTtJQUNuQyxJQUFNLE9BQU8sR0FBWSxTQUFTLENBQUMsT0FBTyxDQUFBO0lBQ3BDLElBQUEsS0FBaUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxFQUFwRCxXQUFXLFFBQUEsRUFBRSxlQUFlLFFBQXdCLENBQUE7SUFDM0QsSUFBTSxLQUFLLEdBQUcsSUFBQSx3QkFBZ0IsRUFBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDL0MsT0FBTztRQUNMLFdBQVcsYUFBQTtRQUNYLGVBQWUsaUJBQUE7UUFDZixLQUFLLE9BQUE7UUFDTCxPQUFPLFNBQUE7S0FDUixDQUFBO0FBQ0gsQ0FBQztBQVhELGdDQVdDO0FBS0Q7Ozs7R0FJRztBQUNILFNBQWdCLGNBQWMsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNuQyxrQ0FBa0M7SUFDbEMsSUFBRyxPQUFPLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLGVBQWUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsZUFBZSxLQUFLLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsZUFBZSxDQUFDO1FBQUUsT0FBTztZQUMzSixVQUFVLEVBQUUsQ0FBQyxDQUFDLFdBQVc7U0FDMUIsQ0FBQTtJQUNELElBQU0sQ0FBQyxHQUFRLEVBQUUsQ0FBQTtJQUNqQixTQUFTLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSTtRQUN0QixPQUFPLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxDQUFBO0lBQzlCLENBQUM7SUFDRCxTQUFTLFdBQVcsQ0FBQyxHQUFHO1FBQ3RCLElBQUcsT0FBTyxHQUFHLEtBQUssUUFBUTtZQUFFLE9BQU8sR0FBRyxDQUFBO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUM1QixDQUFDO0lBQ0QsU0FBUyxPQUFPLENBQUMsR0FBRztRQUNsQixJQUFHLE9BQU8sR0FBRyxLQUFLLFFBQVE7WUFBRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDbEQsT0FBTyxHQUFHLENBQUE7SUFDWixDQUFDO0lBQ0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxvQkFBb0IsR0FBRyxFQUFFLENBQUMsb0JBQW9CLENBQUMsQ0FBQTtJQUM1RyxJQUFJLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxFQUFFLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQyxlQUFlLENBQUMsQ0FBQTtJQUN4RixJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQTtJQUM1RCxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxFQUFFLENBQUMsaUJBQWlCLENBQUMsQ0FBQztXQUN0RixDQUFDLENBQUMsQ0FBQyxpQkFBaUIsR0FBRyxXQUFXLENBQUMsRUFBRSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQTtJQUMvRCxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxFQUFFLENBQUMsaUJBQWlCLENBQUMsQ0FBQztXQUN0RixDQUFDLENBQUMsQ0FBQyxpQkFBaUIsR0FBRyxXQUFXLENBQUMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQTtJQUM5RCxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxFQUFFLENBQUMsb0JBQW9CLENBQUMsQ0FBQztXQUMvRixDQUFDLENBQUMsQ0FBQyxvQkFBb0IsR0FBRyxXQUFXLENBQUMsRUFBRSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQTtJQUNwRSxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsRUFBRSxXQUFXLENBQUMsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUM7V0FDckYsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLEdBQUcsV0FBVyxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUE7SUFDMUQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUE7SUFDcEUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUE7SUFDNUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUMsZUFBZSxDQUFDLENBQUE7SUFDeEYsSUFBSSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtJQUM1RixJQUFJLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxFQUFFLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQyxlQUFlLENBQUMsQ0FBQTtJQUN4RixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUNoSSxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsRUFBRSxPQUFPLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsbUJBQW1CLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBO0lBQ3BLLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUE7SUFDNUosSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUE7SUFDcEksSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUE7SUFDcEksSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsZUFBZSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUE7SUFDcEosSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsZUFBZSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUE7SUFDcEosSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsY0FBYyxFQUFFLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUE7SUFDaEosSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtJQUN4SixPQUFPO0lBQ1AsSUFBRyxFQUFFLENBQUMsYUFBYSxDQUFDLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsaUJBQWlCLEVBQUU7UUFDbEYsQ0FBQyxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUE7UUFDakIsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLGlCQUFpQixDQUFBO0tBQzdFO0lBQ0QsSUFBRyxVQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUMsY0FBYyxTQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFFLEtBQUssVUFBRyxPQUFPLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLGNBQWMsU0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFdBQVcsQ0FBRSxFQUFFO1FBQ2hLLElBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVTtZQUFFLENBQUMsQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFBO1FBQ25DLENBQUMsQ0FBQyxVQUFVLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsY0FBYyxDQUFBO1FBQ3RFLENBQUMsQ0FBQyxVQUFVLENBQUMsV0FBVyxHQUFJLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsV0FBVyxDQUFBO0tBQ2xFO0lBQ0QsQ0FBQyxDQUFDLFVBQVUsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQTtJQUM3RCxJQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUM7UUFBRSxPQUFPLEVBQUMsVUFBVSxFQUFFLENBQUMsRUFBQyxDQUFBO0lBQ3RELE9BQU8sSUFBQSxhQUFLLEVBQUMsRUFBRSxFQUFFO1FBQ2YsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLO1FBQ2YsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPO1FBQ25CLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLFVBQVUsRUFBRSxNQUFNO1FBQ2xCLGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLFlBQVksRUFBRSxFQUFFO0tBQ2pCLEVBQUUsQ0FBQyxDQUFDLENBQUE7QUFDUCxDQUFDO0FBOURELHdDQThEQyJ9